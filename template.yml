heat_template_version: "2018-08-31"
description: "create 3 instances (mongodb,node1,node2) for authentiq and system-information services"
parameters:
  image_id:
    type: string
    description: base image name
    default: "Ubuntu-20.04"
  flavor_id_app:
    type: string
    description: flavor name or id for apps
    default: "app-flavor"
  flavor_id_db:
    type: string
    description: flavor name or id for mongodb
    default: "db-flavor"
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
######################################################################################################################################
####                                                 Network & Router                                                              ###
######################################################################################################################################
resources:
  net1:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      name: auth-app
  net1_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: net1 }
      cidr: "192.168.65.0/26"
      dns_nameservers: ["8.8.8.8"]
      gateway_ip: "192.168.65.1"
      ip_version: 4

  router1:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: { network: public }
      name: cloud-router
  router1_interface1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router1 }
      subnet_id: { get_resource: net1_subnet }

  app_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Security group for ICMP, HTTP and SSH"
      name: app-sec-group
      rules:
      - direction: egress
        ethertype: IPv4
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: icmp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 80
        port_range_min: 80
        protocol: tcp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 22
        port_range_min: 22
        protocol: tcp

  mongo_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Security group for mongo"
      name: mongo-sec-group
      rules:
      - direction: egress
        ethertype: IPv4
        remote_ip_prefix: 0.0.0.0/0
      - direction: ingress
        protocol: icmp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 27017
        port_range_min: 27017
        protocol: tcp
      - direction: ingress
        ethertype: IPv4
        port_range_max: 22
        port_range_min: 22
        protocol: tcp

  node_mongo_port:
    type: OS::Neutron::Port
    properties:
      security_groups: [{ get_resource: mongo_security_group }]
      network_id: { get_resource: net1 }
      fixed_ips:
        - ip_address: "192.168.65.43"
  node1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net1 }
      security_groups: [{ get_resource: app_security_group }]
      fixed_ips:
        - ip_address: "192.168.65.42"
  node2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net1 }
      security_groups: [{ get_resource: app_security_group }]
      fixed_ips:
        - ip_address: "192.168.65.41"

######################################################################################################################################
####                                                   Nodes                                                                       ###
######################################################################################################################################
  node_mongo:
    type: OS::Nova::Server
    properties:
      name: node-mongo
      image: { get_param: image_id }
      flavor: { get_param: flavor_id_db }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: node_mongo_port }
      user_data: |
        #!/bin/bash
        bash <(wget -qO- https://raw.githubusercontent.com/mohammaddan/rayanesh-openstack/master/mongo_deploy.sh)
      user_data_format: RAW

  node1:
    type: OS::Nova::Server
    properties:
      name: node1
      image: { get_param: image_id }
      flavor: { get_param: flavor_id_app }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: node1_port }
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        bash <(wget -qO- https://raw.githubusercontent.com/mohammaddan/rayanesh-openstack/master/app_deploy.sh)

  node2:
    type: OS::Nova::Server
    properties:
      name: node2
      image: { get_param: image_id }
      flavor: { get_param: flavor_id_app }
      networks:
        - port: { get_resource: node2_port }
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        bash <(wget -qO- https://raw.githubusercontent.com/mohammaddan/rayanesh-openstack/master/app_deploy.sh)

######################################################################################################################################
####                                                 LOAD BALANCER                                                                 ###
######################################################################################################################################
  lb_port:
    type: OS::Neutron::Port
    properties:
      # security_groups: [{ get_resource: app_security_group }]
      network_id: { get_resource: net1 }
      fixed_ips:
        - subnet_id: { get_resource: net1_subnet }

  lb_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public
      port_id: { get_resource: lb_port }

  lb_pool:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: lb_floating_ip }
      port_id: { get_resource: lb_port }

  monitor:
    type: OS::Octavia::HealthMonitor
    properties:
      pool: { get_resource: pool }
      type: PING
      delay: 15
      max_retries: 5
      timeout: 10

  pool_member_node1:
    type: OS::Octavia::PoolMember
    properties:
      address: "192.168.65.42"
      admin_state_up: true
      pool: { get_resource: pool }
      protocol_port: 80
      subnet: { get_resource: net1_subnet }
      weight: 1

  pool_member_node:
    type: OS::Octavia::PoolMember
    properties:
      address: "192.168.65.41"
      admin_state_up: true
      pool: { get_resource: pool }
      protocol_port: 80
      subnet: { get_resource: net1_subnet }
      weight: 1

  pool:
    type: OS::Octavia::Pool
    properties:
      admin_state_up: true
      lb_algorithm: ROUND_ROBIN
      loadbalancer: { get_resource: lbaas }
      name: "lb_front_pool"
      protocol: HTTP

  lbaas_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net1 }
      fixed_ips:
        - subnet_id: { get_resource: net1_subnet }

  lbaas_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: public
      port_id: { get_resource: lbaas_port }

  lbaas:
    type: OS::Octavia::LoadBalancer
    properties:
      name: "load-balancer1"
      vip_subnet: { get_resource: net1_subnet }